openapi: "3.0.0"
info:
  version: 0.0.1
  title: Kinde Management API
  description: Provides endpoints to manage your Kinde Businesses
  termsOfService: https://kinde.com/docs/looking-after-you/terms-of-service
  contact:
    name: Kinde Support Team
    email: support@kinde.com
    url: https://kinde.com/docs
servers:
  - url: https://{businessName}.kinde.com
    variables:
      businessName:
        description: Business Name created in the Kinde Console
        default: app
security:
  - kindeBearerAuth: [] 
tags:
  - name: Users
    description: Everything about your end-users
paths:
  /oauth2/user_profile:
    get:
      tags:
        - OAuth
      operationId: getUser
      description: |
        Contains the id, names and email of the currently logged in user
      summary: Returns the details of the currently logged in user
      responses:
        '200':
          description: A succesful response with the user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_profile'
        '403':
          description: Invalid credentials
  /users:
    get:
      tags:
        - Users
      operationId: getUsers
      description: |
        The returned list can be sorted by full name or email address
        in ascending or descending order. The number of records to return at a time can also be controlled using the page_size query
        string parameter. 
      summary: Returns a paginated list of end-user records for a business
      parameters:
        - name: sort
          in: query
          description: Describes the field and order to sort the result by
          schema:
            type: string
            nullable: true
            enum: [name_asc, name_desc, email_asc, email_desc]
        - name: page_size
          in: query
          description: The number of items to return
          schema:
            type: integer
            nullable: true
        - name: user_id
          in: query
          description: The id of the user to filter by
          schema:
            type: integer
            nullable: true
        - name: next_token
          in: query
          description: A string to get the next page of results if there are more results
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: A succesful response with a list of users or an empty list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
        '403':
          description: Invalid credentials
components:
  schemas:
    users:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/user'
        next_token:
          type: string
    user:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        full_name:
          type: string
        last_name:
          type: string
        first_name:
          type: string
        is_suspended:
          type: boolean
    user_profile:
      type: object
      properties:
        id:
          type: string
        preferred_email:
          type: string
        last_name:
          type: string
        first_name:
          type: string
  securitySchemes:
    kindeBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 